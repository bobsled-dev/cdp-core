name: Publish Package

on:
  pull_request:
    types:
      - opened
      - synchronize
    paths-ignore:
      - "**.md"
      - "adr/**"
      - "docs/**"
      - "CODEOWNERS"
  release:
    types: [ "published" ]
  workflow_dispatch:

env:
  ZARF_VERSION: v0.28.2

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Login to Registry1
      uses: docker/login-action@v2
      with:
        registry: registry1.dso.mil
        username: ${{ secrets.REGISTRY1_USERNAME }}
        password: ${{ secrets.REGISTRY1_PASSWORD }}
    - name: Install Zarf
      uses: defenseunicorns/setup-zarf@main
      with:
        version: $ZARF_VERSION
    - name: Build Package
      run: make build
    - name: Save CDP Core package
      # TODO - not sure how else to test without making it a release
      # if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
      uses: actions/upload-artifact@v3
      with:
        name: zarf-package
        path: zarf-package-*.tar.zst

  publish:
    needs: build
    runs-on: ubuntu-latest
    # TODO - not sure how else to test without making it a release
    # if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
    
    steps:
    - name: Login to GHCR
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Install Zarf
      uses: defenseunicorns/setup-zarf@main
      with:
        version: $ZARF_VERSION
    - uses: actions/download-artifact@v3
      with: 
        name: zarf-package
    - name: Publish GHCR Package 
      run: zarf package publish zarf-package-*.tar.zst oci://ghcr.io/bobsled-dev/packages 
    - name: Bundle Package
      run: |
        make get-zarf-linux
        make download-init
        make package-all-linux
    - name: Upload to S3
      uses: prewk/s3-cp-action@v2
      with:
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws_region: 'us-east-2'
        source: 'cdp-core-*-all.tar.zst'
        dest: 's3://cdp-core/'
